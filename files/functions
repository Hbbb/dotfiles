function branch_name {
  val=`git branch 2>/dev/null | grep '^*' | colrm 1 2`
  echo "$val"
}

function git_sync_branch {
  current_branch=`branch_name`
  git checkout $1 && git pull
  git checkout $current_branch
  git merge $1
}

function g {
  if [[ $# > 0 ]]; then
    git $@
  else
    git status
  fi
}

### PROCESS
# mnemonic: [K]ill [P]rocess
# show output of "ps -ef", use [tab] to select one or multiple entries
# press [enter] to kill selected processes and go back to the process list.
# or press [escape] to go back to the process list. Press [escape] twice to exit completely.
function kp {
  local pid=$(ps -ef | sed 1d | eval "fzf ${FZF_DEFAULT_OPTS} -m --header='[kill:process]'" | awk '{print $2}')

  if [ "x$pid" != "x" ]
  then
    echo $pid | xargs kill -${1:-9}
    kp
  fi
}


### BREW + FZF
# brew upgrade packages
function bup {
  local upd=$(brew leaves | eval "fzf ${FZF_DEFAULT_OPTS} -m --header='[brew:update]'")

  if [[ $upd ]]; then
    for prog in $(echo $upd)
    do brew upgrade $prog
    done
  fi
}


### BREW + FZF
# mnemonic [B]rew [C]lean [P]lugin
function bcp {
  local uninst=$(brew leaves | eval "fzf ${FZF_DEFAULT_OPTS} -m --header='[brew:clean]'")

  if [[ $uninst ]]; then
    for prog in $(echo $uninst)
    do brew uninstall $prog
    done
  fi
}


### BREW + FZF
# update multiple packages at once
# mnemonic [B]rew [I]nstall [P]lugin
function bip {
  local inst=$(brew search | eval "fzf ${FZF_DEFAULT_OPTS} -m --header='[brew:install]'")

  if [[ $inst ]]; then
    for prog in $(echo $inst)
    do brew install $prog
    done
  fi
}

